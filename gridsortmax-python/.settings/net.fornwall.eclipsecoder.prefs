eclipse.preferences.version=1
problemStatement=GridSortMax.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.8.0_91" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement" id\="ProblemStatement0">\n  <void property\="className">\n   <string>GridSortMax</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 702 DIV 1 - 300 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;GridSortMax&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;\nCharlie has a grid of &lt;b&gt;n&lt;/b&gt; rows by &lt;b&gt;m&lt;/b&gt; columns.\nThe rows are numbered 0 through &lt;b&gt;n&lt;/b&gt;-1 from top to bottom.\nThe columns are numbered 0 through &lt;b&gt;m&lt;/b&gt;-1 from left to right.\n&lt;/p&gt;\n\n&lt;p&gt;\nEach cell of the grid contains a positive integer.\nThe integers in Charlie&apos;s grid are a permutation of the numbers 1 through &lt;b&gt;n&lt;/b&gt;*&lt;b&gt;m&lt;/b&gt;.\n(I.e., each of these numbers occurs in the grid exactly once.)\n&lt;/p&gt;\n\n&lt;p&gt;\nGiven a grid, its &lt;i&gt;value list&lt;/i&gt; is a sequence constructed by listing all values in the grid in row major order.\nThat is, we first list the values in row 0 from left to right, then the values in row 1 from left to right, and so on.\n&lt;/p&gt;\n\n&lt;p&gt;\nYou are given the integers &lt;b&gt;n&lt;/b&gt; and &lt;b&gt;m&lt;/b&gt;\: the dimensions of Charlie&apos;s grid.\nYou are also given a tuple (integer) &lt;b&gt;grid&lt;/b&gt;\: the value list for Charlie&apos;s grid.\n(Formally, &lt;b&gt;grid&lt;/b&gt;[i*&lt;b&gt;m&lt;/b&gt;+j] is the value stored in row i, column j of the grid.)\n&lt;/p&gt;\n\n&lt;p&gt;\nIn Charlie&apos;s eyes, the most beautiful of all grids is the &lt;i&gt;sorted grid&lt;/i&gt;\: the grid whose value list is the ordered ordered sequence {1,2,3,...,&lt;b&gt;n&lt;/b&gt;*&lt;b&gt;m&lt;/b&gt;}.\n&lt;/p&gt;\n\n&lt;p&gt;\nGiven a grid, its &lt;i&gt;similarity string&lt;/i&gt; is a string of zeroes and ones that describes the similarity between that particular grid and the sorted grid. More precisely\:\n&lt;ul&gt;\n&lt;li&gt;The similarity string is a string of length &lt;b&gt;n&lt;/b&gt;*&lt;b&gt;m&lt;/b&gt;.&lt;/li&gt;\n&lt;li&gt;For each i, character i of the similarity string is &apos;1&apos; if both grids have the same i-th element in their value lists, and it is &apos;0&apos; if those values differ. (All indices in the previous sentence are 0-based.)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/p&gt;\n\n&lt;p&gt;\nFor example, suppose &lt;b&gt;n&lt;/b&gt;\=2 and &lt;b&gt;m&lt;/b&gt;\=3. The sorted grid has the value list {1,2,3,4,5,6}, and its similarity string is &quot;111111&quot;. Another possible grid with these dimensions has the value list {1,5,2,4,3,6}. The similarity string for this grid is &quot;100101&quot;.\n&lt;/p&gt;\n\n&lt;p&gt;\nCharlie can modify his grid in two ways\: He may swap any two rows, and he may swap any two columns.\nHe wants to use these operations to obtain a grid with the lexicographically largest possible similarity string.\nFind and return that string.\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;GridSortMax&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;findMax&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;integer, integer, tuple (integer)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;string&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;def findMax(self, n, m, grid)\:&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stack limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;n,m&lt;/b&gt; will be between 1 and 50, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;grid&lt;/b&gt; will be a permutation of [1,...,&lt;b&gt;n&lt;/b&gt;*&lt;b&gt;m&lt;/b&gt;]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{\n 1,2,\n 3,4\n}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;1111&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Charlie&apos;s grid is the sorted grid.\nIts similarity string is therefore &quot;1111&quot;.\nCharlie should make no changes to the grid, as this is already the lexicographically largest of all possible strings.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{\n 2,1,\n 3,4\n}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;1100&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The similarity string for Charlie&apos;s current grid is &quot;0011&quot;, as the values 3 and 4 are in the same places as in the sorted grid.\nCharlie should swap the two columns.\nThat swap will produce a grid with the similarity string &quot;1100&quot;\: now the values 1 and 2 are in their correct places but the values 3 and 4 aren&apos;t.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{\n 4,2,\n 3,1\n}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;1001&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;10&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{10,6,2,3,5,7,1,9,4,8}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;1111111111&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{\n 5,2,10,7,9,\n 3,4,14,11,1,\n 15,12,6,8,13\n}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;101100100100000&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;5)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{\n 3,9,\n 5,1,\n 10,6,\n 2,7,\n 8,11,\n 12,4\n}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;100000101010&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>findMax</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>n</string>\n   </void>\n   <void method\="add">\n    <string>m</string>\n   </void>\n   <void method\="add">\n    <string>grid</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>java.lang.Integer</class>\n   </void>\n   <void method\="add">\n    <class>[Ljava.lang.Integer;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.String</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>2</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>1</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n          <void index\="2">\n           <int>3</int>\n          </void>\n          <void index\="3">\n           <int>4</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <string>1111</string>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>2</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>2</int>\n          </void>\n          <void index\="1">\n           <int>1</int>\n          </void>\n          <void index\="2">\n           <int>3</int>\n          </void>\n          <void index\="3">\n           <int>4</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <string>1100</string>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>2</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.Integer" length\="4">\n          <void index\="0">\n           <int>4</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n          <void index\="2">\n           <int>3</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <string>1001</string>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>1</int>\n        </void>\n        <void index\="1">\n         <int>10</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.Integer" length\="10">\n          <void index\="0">\n           <int>10</int>\n          </void>\n          <void index\="1">\n           <int>6</int>\n          </void>\n          <void index\="2">\n           <int>2</int>\n          </void>\n          <void index\="3">\n           <int>3</int>\n          </void>\n          <void index\="4">\n           <int>5</int>\n          </void>\n          <void index\="5">\n           <int>7</int>\n          </void>\n          <void index\="6">\n           <int>1</int>\n          </void>\n          <void index\="7">\n           <int>9</int>\n          </void>\n          <void index\="8">\n           <int>4</int>\n          </void>\n          <void index\="9">\n           <int>8</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <string>1111111111</string>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>3</int>\n        </void>\n        <void index\="1">\n         <int>5</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.Integer" length\="15">\n          <void index\="0">\n           <int>5</int>\n          </void>\n          <void index\="1">\n           <int>2</int>\n          </void>\n          <void index\="2">\n           <int>10</int>\n          </void>\n          <void index\="3">\n           <int>7</int>\n          </void>\n          <void index\="4">\n           <int>9</int>\n          </void>\n          <void index\="5">\n           <int>3</int>\n          </void>\n          <void index\="6">\n           <int>4</int>\n          </void>\n          <void index\="7">\n           <int>14</int>\n          </void>\n          <void index\="8">\n           <int>11</int>\n          </void>\n          <void index\="9">\n           <int>1</int>\n          </void>\n          <void index\="10">\n           <int>15</int>\n          </void>\n          <void index\="11">\n           <int>12</int>\n          </void>\n          <void index\="12">\n           <int>6</int>\n          </void>\n          <void index\="13">\n           <int>8</int>\n          </void>\n          <void index\="14">\n           <int>13</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <string>101100100100000</string>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase5">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase5"/>\n       <array class\="java.lang.Object" length\="3">\n        <void index\="0">\n         <int>6</int>\n        </void>\n        <void index\="1">\n         <int>2</int>\n        </void>\n        <void index\="2">\n         <array class\="java.lang.Integer" length\="12">\n          <void index\="0">\n           <int>3</int>\n          </void>\n          <void index\="1">\n           <int>9</int>\n          </void>\n          <void index\="2">\n           <int>5</int>\n          </void>\n          <void index\="3">\n           <int>1</int>\n          </void>\n          <void index\="4">\n           <int>10</int>\n          </void>\n          <void index\="5">\n           <int>6</int>\n          </void>\n          <void index\="6">\n           <int>2</int>\n          </void>\n          <void index\="7">\n           <int>7</int>\n          </void>\n          <void index\="8">\n           <int>8</int>\n          </void>\n          <void index\="9">\n           <int>11</int>\n          </void>\n          <void index\="10">\n           <int>12</int>\n          </void>\n          <void index\="11">\n           <int>4</int>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase5"/>\n       <string>100000101010</string>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
